<?php

namespace W7\Core\Dispatcher;

use Illuminate\Events\Dispatcher;

class EventDispatcher extends Dispatcher {
	/**
	 * @var Dispatcher
	 */
	private $dispatcher;

	public function __construct() {
		$this->dispatcher = new Dispatcher();
		$this->register();
	}

	public function register() {
		$userEvents = iconfig()->getUserConfig('event');
		foreach ($userEvents as $name => $listener) {
			foreach ((array)$listener as $item) {
				$this->listen($name, $item);
			}
		}
	}

	public function listen($events, $listener) {
		if (is_string($listener)) {
			$listener = function ($params = null) use ($listener) {
				if (class_exists($listener)) {
					if (!is_array($params)) {
						$params = [$params];
					}
					return (new $listener)->run(...$params);
				}
				return true;
			};
		}
		parent::listen($events, $listener); // TODO: Change the autogenerated stub
	}

	public function setContainer($container) {
		$this->container = $container;
	}
}